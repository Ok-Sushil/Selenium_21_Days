Topic 1: Selenium WebDriver Overview & Setup
Subtopic a: What is Selenium?
-------------------------------------------------------------------------------------------------------------------------
ðŸ”¹ Selenium is an open-source automation testing tool used to automate web applications.
ðŸ”¹ Selenium WebDriver is the main component that interacts with web browsers like Chrome, Firefox, Edge, Safari, etc.
ðŸ”¹ Why use Selenium?

Automates web testing without manual effort.
Works with multiple programming languages (Java, Python, C#).
Supports different browsers.
âœ… Role of Selenium WebDriver:

Opens and controls browsers.
Finds and interacts with web elements (buttons, links, input fields, etc.).
Automates form filling, clicking buttons, scrolling pages, etc.

Subtopic b: Browser Drivers Setup (ChromeDriver & GeckoDriver)
------------------------------------------------------------------------------------------------------------------------
Selenium needs Browser Drivers to interact with web browsers.

ðŸ”¹ ChromeDriver Setup (For Chrome Browser)

Download ChromeDriver from here.
Select the version that matches your Chrome version.
Extract the file and place it in a known folder (e.g., C:\webdriver\chromedriver.exe).
ðŸ”¹ GeckoDriver Setup (For Firefox Browser)

Download GeckoDriver from here.
Extract the file and place it in a known folder (e.g., C:\webdriver\geckodriver.exe).
âœ… Setting Up the Driver in Code:

System.setProperty("webdriver.chrome.driver", "C:\\webdriver\\chromedriver.exe");
WebDriver driver = new ChromeDriver();

System.setProperty("webdriver.gecko.driver", "C:\\webdriver\\geckodriver.exe");
WebDriver driver = new FirefoxDriver();



Subtopic c: Environment Setup â€“ Creating a Selenium Project
--------------------------------------------------------------------------------------------------------------------------------------
âœ… Step 1: Install Java & IDE (Already Done ðŸŽ‰)
âœ… Step 2: Add Selenium JARs or Dependencies

ðŸ”¹ If Using Maven (Recommended in IntelliJ/Eclipse):

Create a Maven Project in Eclipse/IntelliJ.
Open pom.xml and add these dependencies:
xml
<dependencies>
    <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>4.8.0</version>
    </dependency>
</dependencies>
Save and wait for Maven to download the required JAR files.
ðŸ”¹ If Using Eclipse Without Maven:

Download Selenium Java Client from Selenium Downloads.
Extract the ZIP and add all JARs to the project build path.
âœ… Now the Selenium environment is ready! ðŸŽ‰