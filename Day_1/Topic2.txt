Topic 2: Basic Commands & Element Locators
Subtopic a: Browser Launch & URL Navigation
üîπ Example: Opening a browser and navigating to Google


import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class OpenBrowser {
    public static void main(String[] args) {
        // Set ChromeDriver path
        System.setProperty("webdriver.chrome.driver", "C:\\webdriver\\chromedriver.exe");

        // Create WebDriver instance
        WebDriver driver = new ChromeDriver();

        // Open Google
        driver.get("https://www.google.com");

        // Print the title of the page
        System.out.println("Page Title: " + driver.getTitle());

        // Close browser
        driver.quit();
    }
}

‚úÖ Commands Used:

System.setProperty(...) ‚Üí Sets the ChromeDriver path.
WebDriver driver = new ChromeDriver(); ‚Üí Opens Chrome browser.
driver.get("URL"); ‚Üí Opens the specified website.
driver.getTitle(); ‚Üí Retrieves the page title.
driver.quit(); ‚Üí Closes the browser.
Subtopic b: Element Locators ‚Äì ID, Name, ClassName
Selenium needs locators to find elements on a webpage.

üîπ Basic Locators in Selenium:

Locator	Syntax	Example
ID	    By.id("idValue")	driver.findElement(By.id("username"))
Name	By.name("nameValue")	driver.findElement(By.name("email"))
Class	By.className("classValue")	driver.findElement(By.className("btn-primary"))

üîπ Example: Finding Elements by ID & Name
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class LocatorsExample {
    public static void main(String[] args) {
        System.setProperty("webdriver.chrome.driver", "C:\\webdriver\\chromedriver.exe");
        WebDriver driver = new ChromeDriver();
        
        driver.get("https://www.example.com");

        // Find element by ID and enter text
        WebElement username = driver.findElement(By.id("username"));
        username.sendKeys("testuser");

        // Find element by Name and enter text
        WebElement password = driver.findElement(By.name("password"));
        password.sendKeys("mypassword");

        driver.quit();
    }
}


‚úÖ Explanation:

findElement(By.id("username")) ‚Üí Finds an input field using ID.
sendKeys("testuser") ‚Üí Enters text into the input field.
Subtopic c: Introduction to XPath & CSS Selectors
üîπ XPath and CSS Selectors are powerful ways to locate elements when ID, Name, or ClassName are not available.

1Ô∏è‚É£ XPath Basics
‚úÖ Syntax:

driver.findElement(By.xpath("//tag[@attribute='value']"));
‚úÖ Example: Finding Elements using XPath

WebElement loginButton = driver.findElement(By.xpath("//button[@id='login']"));
loginButton.click();
‚úÖ XPath Variations:

XPath Type	Example	Explanation
Absolute XPath	/html/body/div/form/input	Starts from root (/) ‚Äì Not recommended.
Relative XPath	//input[@id='username']	Starts from anywhere in the page.
Contains	//button[contains(text(),'Login')]	Finds elements that partially match text.
AND / OR	//input[@type='text' and @name='email']	Finds an element with both conditions.
2Ô∏è‚É£ CSS Selectors Basics
‚úÖ Syntax:

driver.findElement(By.cssSelector("tag#id"));
driver.findElement(By.cssSelector("tag.class"));
‚úÖ Example: Finding Elements using CSS Selectors

WebElement searchBox = driver.findElement(By.cssSelector("input#search"));
searchBox.sendKeys("Selenium");
‚úÖ CSS Selector Variations:

CSS Selector	Example	Explanation
ID	#username	Selects element with id="username"
Class	.login-btn	Selects element with class="login-btn"
Tag & Class	input.textbox	Selects <input> elements with class textbox
Attribute	input[type='text']	Selects <input> elements of type text
‚úÖ Summary of What You Learned Today:
‚úî Selenium WebDriver overview and role.
‚úî Browser Driver setup for Chrome & Firefox.
‚úî Created a Selenium project and added dependencies.
‚úî Opened a browser & navigated to a URL.
‚úî Used Locators (ID, Name, ClassName) to find elements.
‚úî Learned XPath & CSS Selectors for advanced element finding.